configuration got from this:

https://www.twilio.com/blog/2015/08/setting-up-react-for-es6-with-webpack-and-babel-2.html


To start the server
$ webpack-dev-server --progress --colors



Branch 
chapterone notes:
*****************

//this is written in javascript
var MyClass = React.createClass({
  render: function() {
    return (
      <div>hello world</div>
    );
  } 
});

//or by writing in ES6 such as this one:
class MyClass extends React.Component {
  render() {
    return <div>hello world</div>;
  }
}

react dom.render vs react dom
http://stackoverflow.com/questions/33007402/is-there-any-difference-between-react-render-and-reactdom-render

React is the library for creating views. ReactDOM is the library used to actually render the UI in the browser.

//map, reduce, and assign.

/////////////////
to create react app:
basic folder set up needed:
public > source

create source folder where which contains all javascript modules

index.html outside of source folder

package.json file

then a build tool

instead of typing React.Component just use an import from the module


to comment out in react app:
{/* or can be written as  */}


state and stateless:


Jsx helps us write code in html syntax inside javascript.

Es6 is compiled to es5 in browsers through babel


components:
These are like building blocks of react. They are parent component and child component. 

props:
this is the data that gets passed. 

state:
This is the initial state. child/parent cocmponenet can have its own state.

Note that when we want to pass the information from the parent component to the child component then we have to pass the data in this.props only. These props can be used to set the state too alsongside using the this.state to set the data.But state belonsg to only that component 


UsE axio to do ajax call. 

while using react router, use <Link to> instead of <a href>. se the github commit to get an idea


when we create different components and put them in different files. lets say src folder has components folder within which there are many components like users, user etc which are being exported to the scripts.js. Make sure that while you are importing from one file to another, use `import user from '/user.js'` instead of `import user from ./component/user.js`. this is because we are importing within in the same folder component.



